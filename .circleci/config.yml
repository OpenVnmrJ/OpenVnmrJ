version: 2 # use CircleCI 2.0
jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point
    
    working_directory: ~/OpenVnmrJ # directory where steps will run

    docker: # run the steps with Docker
      - image: circleci/openjdk:8-jdk-browsers

    steps: # a collection of executable commands
      - checkout # check out source code to working directory
      - run:
          name: Install System Dependencies
          command: |
            lsb_release -a
            sudo apt-get -qq update
            sudo apt-get install -y gcc g++ gfortran gcc-multilib scons \
                libc6-dev-i386 lib32stdc++-6-dev libglu1-mesa-dev \
                liblapack-dev liblapacke-dev libfftw3-dev libmotif-dev libxt-dev
            sudo dpkg --add-architecture i386
            sudo apt-get -qq update
            sudo apt-get install -y libxt-dev:i386 libx11-dev:i386
            echo "dash dash/sh boolean false" | sudo debconf-set-selections
            DEBIAN_FRONTEND=noninteractive sudo dpkg-reconfigure dash
            java -version
            gcc --version
            g++ --version
            gfortran --version
      - run:
          name: Checkout ovjTools
          command: |
            cd $HOME
            git clone --depth 3 --branch master https://github.com/${CIRCLE_USERNAME}/ovjTools.git
      - run:
          name: Build OpenVnmrJ
          command: |
            export OVJ_BUILDDIR=$HOME
            export OVJ_ROOT=${OVJ_BUILDDIR}/OpenVnmrJ
            export OVJ_TOOLS=${OVJ_BUILDDIR}/ovjTools
            gcc --version
            cd ${OVJ_ROOT}
            cp -a ${OVJ_TOOLS}/bin ${OVJ_BUILDDIR}
            OVJ_SCONSFLAGS='-j2' ${OVJ_ROOT}/scripts/build_release.sh build package
            echo "--- whatsin output ---"
            ${OVJ_TOOLS}/bin/whatsin $(ls -t ${OVJ_BUILDDIR}/logs/build* | head -1) | tail -80
            ls -l ${OVJ_BUILDDIR}/dvdimage*
      - run:
          name: Build Failed
          when: on_fail
          command: |
            export OVJ_BUILDDIR=$HOME
            sudo tail -180 ${OVJ_BUILDDIR}/logs/build*
      - run:
          name: Install OpenVnmrJ
          command: |
            export OVJ_BUILDDIR=$HOME
            export OVJ_ROOT=${OVJ_BUILDDIR}/OpenVnmrJ
            export OVJ_TOOLS=${OVJ_BUILDDIR}/ovjTools
            chmod a+xr ${OVJ_BUILDDIR}
            chmod a+xr ${OVJ_BUILDDIR}/dvdimageOVJ*
            sudo ${OVJ_ROOT}/scripts/install_test.sh -f install
      - run:
          name: Install Failed
          when: on_fail
          command: |
            export OVJ_BUILDDIR=$HOME
            sudo tail -180 ${OVJ_BUILDDIR}/logs/install_test.log
      - run:
          name: Test OpenVnmrJ
          command: |
            export OVJ_BUILDDIR=$HOME
            export OVJ_ROOT=${OVJ_BUILDDIR}/OpenVnmrJ
            export OVJ_TOOLS=${OVJ_BUILDDIR}/ovjTools
            sudo ${OVJ_ROOT}/scripts/install_test.sh -f test
            sudo rm -f ~vnmr1/vnmrsys/ovj_qa/ovjtest/reports/2015-10-27
            echo "--- diff test output against GOLD (gold on left) ---"
            # report.txt is symlink to the latest test results file
            sudo diff ${OVJ_ROOT}/src/vjqa/vjtest/reports/gold-circleci \
                ~vnmr1/vnmrsys/ovj_qa/ovjtest/reports/report.txt || true
      - run:
          name: Tests Failed
          when: on_fail
          command: |
            sudo cat ~vnmr1/vnmrsys/ovj_qa/ovjtest/reports/20*
      - store_artifacts:
          name: Store VJQA Results
          path: /home/vnmr1/vnmrsys/ovj_qa/ovjtest/reports
