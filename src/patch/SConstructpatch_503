import os
import glob
import sys
import string
import datetime
sys.path.append(os.path.join(os.getcwd(), 'patch'))
import myShutil # for better copytree()

swDir = os.path.join(os.getcwd(),os.pardir)

# ---------------   copy files and create the patch build ---------------------

# get envirnment
env = Environment(ENV = os.environ)

# define the patch name
patchTarget = datetime.date.today().strftime("custom_%Y-%m-%d")
patchTarget = '4.2_LNX_ANY_503'
readmeFile = 'Readme.503'


# patchDir = os.path.join(swDir,os.pardir,pardir,os.pardir,
patchDirParent = os.path.join(swDir,os.pardir,os.pardir,
                         'patches',patchTarget)

cmd = 'rm -rf ' + patchDirParent
Execute(cmd);
os.makedirs(patchDirParent)

dest = os.path.join(patchDirParent,'patchmake')
src  = os.path.join(swDir,'scripts','patchmake.sh')
Execute(Copy(dest,src))
Execute(Chmod(dest,0755))

patchDir = os.path.join(patchDirParent,'patch')
os.makedirs(patchDir)

dest = os.path.join(patchDir,'Readme')
src  = os.path.join(swDir,'patch',readmeFile)
Execute(Copy(dest,src))
Execute(Chmod(dest,0644))
dest = os.path.join(patchDirParent,patchTarget+'.Readme')
Execute(Copy(dest,src))
Execute(Chmod(dest,0644))
#
# ---------------   Patch specific addition need to go here --------
# You can add tiems here or create a separate SConstruct.105
# eg: SConscript('SConstruct.105')
# create any neccessary vnmr-subdirectories inside the patch directory
# eg: binDir    = os.path.join(patchDir,'bin')
#     if not os.path.exists(binDir):
#         os.makedirs(binDir)
#
#---------------------------------------------------------------------
#

binDir    = os.path.join(patchDir,'bin')
if not os.path.exists(binDir):
   os.makedirs(binDir)

scriptsList = [
               'doAcct',
               'vnmr_accounting',
             ]

for i in scriptsList:
    dest = os.path.join(binDir,i)
    src  = os.path.join(swDir,'scripts',i+'.sh')
    Execute(Copy(dest,src))
    Execute(Chmod(dest,0755))

javaDir = os.path.join(patchDir,'java')
if not os.path.exists(javaDir):
   os.makedirs(javaDir)

src  = os.path.join(swDir,'jaccount','account.jar')
dest = os.path.join(javaDir,'account.jar')
Execute(Copy(dest,src))
Execute(Chmod(dest,0644))

manDir = os.path.join(patchDir,'manual')
if not os.path.exists(manDir):
   os.makedirs(manDir)

manFileList = [
          'vnmr_accounting',
          ]

for i in manFileList:
    dest = os.path.join(manDir,i)
    src  = os.path.join(swDir,'common','manual',i)
    Execute(Copy(dest,src))
    Execute(Chmod(dest,0644))

admDir = os.path.join(patchDir,'adm','accounting')
if not os.path.exists(admDir):
   os.makedirs(admDir)

src  = os.path.join(swDir,'common','adm','accounting','acctHeader.ps')
dest = os.path.join(admDir,'acctHeader.ps')
Execute(Copy(dest,src))
Execute(Chmod(dest,0644))

src  = os.path.join(swDir,'common','adm','accounting','acctTail.ps')
dest = os.path.join(admDir,'acctTail.ps')
Execute(Copy(dest,src))
Execute(Chmod(dest,0644))

cmd = 'cd ' + patchDirParent + ';./patchmake patch ' + patchTarget + '; rm -f patchmake'
Execute(cmd);
