#

import os
import shutil

# get current working directory
cwd=os.getcwd()

rootGilson = os.path.join(cwd,os.pardir, os.pardir,os.pardir,
                  'options','standard','Gilson')
root768AS = os.path.join(cwd,os.pardir, os.pardir,os.pardir,
                  'options','passworded','768AS')
root4896AS = os.path.join(cwd,os.pardir, os.pardir,os.pardir,
                  'vnmr','asm','racks')

# racksetup* stuff
rackSetupList = [ 'racksetup',
                  'racksetup_768AS' ]
rackSetupPathG = os.path.join(rootGilson,'asm')
rackSetupPathA = os.path.join(root768AS,'asm')

# more tcl stuff
tclFileList = [ 'get.tcl',
                'put.tcl',
                'wash.tcl',
                'inject.tcl',
                'retrieve.tcl',
                'mix.tcl',
                'transfer.tcl' ]
tclAsmGilsonPath = os.path.join(rootGilson,'asm','tcl')

# protocols
protocolsGilsonList = [ 'inittitrationGet.tcl',
                        'inittitrationPut.tcl',
                        'titrationGet.tcl',
                        'titrationPut.tcl' ]
protocolsGilsonPath = os.path.join(rootGilson,'asm','protocols')


rackList = [ 'rackInfo',
             'code_200.grk',
             'code_201.grk',
             'code_201h.grk',
             'code_202.grk',
             'code_204.grk',
             'code_205.grk',
             'code_205h.grk',
             'code_505.grk',
             'code_505h.grk',
             'code_afr2.grk',
             'code_209.grk',
             'code_30rp.grk',
             'code_31rp.grk',
             'code_211.grk',
             'code_854.grk',
             'code_3mm.grk',
             'code_5mm.grk',
             'm215_inj.grk',
             'm215sw_inj.grk' ]
rackGilsonPath = os.path.join(rootGilson,'asm','racks')
rack768ASPath  = os.path.join(root768AS, 'asm','racks')
 
infoList = [ 'default',
             'samp0',
             'samp1',
             'samp2',
             'samp3',
             'samp4',
             'samp5',
             'samp6',
             'samp7',
             'samp8',
             'samp9',
             'samps' ]
infoGilsonPath = os.path.join(rootGilson,'asm','info')
info768ASPath  = os.path.join(root768AS, 'asm','info')

defaultList = [ 'default' ]
rack4896ASList = [ 'code_as4896.grk',
                   'code_as12.grk'   ]
default768ASPath = os.path.join(root768AS,'asm','info','768AS')

# make sure paths exitst
if not os.path.exists(rackSetupPathG):
   os.makedirs(rackSetupPathG)
# if not os.path.exists(rackSetupPathA):
#    os.makedirs(rackSetupPathA)
if not os.path.exists(tclAsmGilsonPath):
   os.makedirs(tclAsmGilsonPath)
if not os.path.exists(protocolsGilsonPath):
   os.makedirs(protocolsGilsonPath)
if not os.path.exists(rackGilsonPath):
   os.makedirs(rackGilsonPath)
# if not os.path.exists(rack768ASPath):
#    os.makedirs(rack768ASPath)
if not os.path.exists(infoGilsonPath):
   os.makedirs(infoGilsonPath)
# if not os.path.exists(info768ASPath):
#    os.makedirs(info768ASPath)
# if not os.path.exists(default768ASPath):
#    os.makedirs(default768ASPath)
if not os.path.exists(root4896AS):
   os.makedirs(root4896AS)

# copy files
def copyFilesHere(srcList, dstPath):
   for i in srcList:
      srcfile = os.path.join(cwd,i)
      dstfile = os.path.join(dstPath,i)
      shutil.copyfile(srcfile,dstfile)

#copy to options/passworded/Gilson/asm
copyFilesHere([ rackSetupList[0] ], rackSetupPathG)
#copy to options/passworded/768AS/asm
#copyFilesHere(rackSetupList,rackSetupPathA)
#copy to options/passworded/Gilson/asm/tcl
copyFilesHere(tclFileList,tclAsmGilsonPath)
#copy to options/passworded/Gilson/asm/protocols
copyFilesHere(protocolsGilsonList,protocolsGilsonPath)
#copy to options/passworded/Gilson/asm/racks and .../768AS/asm/racks
copyFilesHere(rackList,rackGilsonPath)
# copyFilesHere(rackList,rack768ASPath)
# copy to options/passworded/Gilson/asm/info and .../768AS/asm/racks
copyFilesHere(infoList,infoGilsonPath)
# copyFilesHere(infoList,info768ASPath)
#copy to options/passworded/768AS/asm/info/768AS
# copyFilesHere(defaultList,default768ASPath)
copyFilesHere(rack4896ASList,root4896AS)
