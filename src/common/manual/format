
*******************************************************************************
format	-	formats a real number into a nice string for output
format	-	converts a string into upper case or lower case for output
format	-	tests a string to determine if it can represent a real number
                or a finite number
format	-	interconverts string representations of real numbers and real
                numbers
format  -       expand a string to remove tabs.
*******************************************************************************

  If the command is given two arguments, the first argument may be a string
  or real variable and the action depends on the value of the second argument.
  If the second argument is 'upper', this command will convert the first
  argument to all upper case characters.
  If the second argument is 'lower', this command will convert the first
  argument to all lower case characters.
  If the second argument is 'expand', this command will convert all tabs ('\t')
  into the equivalent number of spaces (' ')

  Usage  -  format(stringvar,'upper'):stringvar
            format(stringvar,'lower'):stringvar
            format(stringvar,'expand'):stringvar

  If the command is given two or more arguments and the last argument is either
  'isreal' or 'isfinite', the preceeding arguments will be tested to see if they
  satisfy the rules for a real number or a finite number. It will return a 1
  if all preceeding arguments represent a real number (for 'isreal') or
  a finite number (for 'isfinite') and a 0 otherwise. The difference between
  'isreal' and 'isfinite' is only in the handling of the strings 'inf' and '-inf'.
  The 'isreal' case will return a 1 and the 'isfinite' case will return a 0.

  Usage  -  format($a,$b,'isreal'):$ans
            format($a,$b,'isfinite'):$ans

  If the command is given three arguments, the first argument must be a
  real number or string holding a real number. If it is a string variable,
  it must satisfy the rules for a real number.  The 'isreal' option above
  can be used for this purpose.  This command will format it into either
  a string with length n and precision m or another real number of
  length n and precision m.  If you want to return the value into a
  string, if it is a temporary dollar parameter (e.g., $sval), the
  parameter will need to be initialized as a string by first setting
  it to a string (e.g., $sval='')

  Usage  -  format(realvar,n,m):$sval
            format(realvar,n,m):$rval
            format(stringvar,n,m):$sval
            format(stringvar,n,m):$rval
	    where realvar is a variable of real type.
            n is the length, m is the precision (number to the right
	    of the decimal point.
	    stringvar is a string variable.
            $sval is a string return value.
            $rval is a real return value.
            
  Examples;

    format(a,5,2):sa            If a=24.1264  then string sa='24.13'
    format(solvent,'lower'):n1  If solvent='CDCl3' then n1='cdcl3'
    format($1,'isreal'):$a      Will set $a to 1 if $1 represents a number.

    Format string value $snum = '143.92'
    format('10\t20\t30','expand'):sa    Will set sa='10      20      30'

    $sval=''                    "Initialize $sval to a string variable"
    $snum = '143.92'
    $rnum = 32.75

    Format real value $rnum = 32.75
    format($rnum,3,1):$sval     Will set $sval to the string '32.8'
    format($rnum,3,1):$rval     Will set $rval to the number 32.8

    Format string value $snum = '143.92'
    format($snum,3,1):$sval     Will set $sval to the string '143.9'
    format($snum,3,1):$rval     Will set $rval to the number 143.9

