
readstr('stringvar', [tree,] '$par1', '$par2', ...):num

readstr reads a string parameter and each word in the string
is placed in a receiving local parameter. The receiving local parameter
can be either strings or reals. If a receiving parameter is specified
as '', the corresponding word in the stringvar is ignored. If there are
fewer receiving parameters than words in the "stringvar" parameter, 
the remained of the stringvar will be placed in the final receiving
parameter. If an array element of the 'stringvar' parameter is the
null string (''), then that element will be skipped.  The readstr
program will return the number of array elements in the receiving
parameters.

The stringvar parameter can be either a local parameter, which starts with a $,
or an experiment parameter, which does not start with a $. If an experiment
parameter is used, it may optionally be followed by the parameter tree. 
The five parameter trees are 'current', 'global' , 'processed',
'systemglobal', and 'usertree'.  The default tree is 'current'.
If an incorrect tree name is supplied, the command will abort. 

Example:

$s[1]='l11 l12 l13'
$s[2]='l21 l22 l23 l24'
$s[3]=''
$p1=''
$p2=''
$p3=''

readstr('$s','$p1','$p2','$p3'):$num

will set $num=2
$p1='l11','l21'
$p2='l12','l22'
$p3='l13','l23 l24'

readstr('$s','$p1','','$p3'):$num

will set $num=2
$p1='l11','l21'
$p3='l13','l23 l24'

newString = $s
readstr('newString','$p1','','$p3'):$num
readstr('newString','global','$p1','','$p3'):$num
