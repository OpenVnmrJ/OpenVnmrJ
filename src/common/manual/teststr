****************************************************************************
teststr(parameter,string <,tree>):$ret - find which array element matches string
teststr(parameter,string ,tree,'nocase'):$ret - find which array element
                                                    matches string (case insensitive)
teststr(parameter,string ,tree,'starts'):$ret - find which array element
                                                    starts with string
teststr(parameter,string ,tree,'startsNocase'):$ret - find which array element
                                                    starts with string (case insensitive)
teststr(parameter,string ,tree,'last'):$ret - find the last array element that matches string
teststr(parameter,string ,tree,'$ret'):$tot - return array indices in $ret of all elements
                                                     that matches string
****************************************************************************

  The teststr command requires at least two arguments. The first is the
  name of a string parameter.  The first argument must generally be enclosed
  in single quotes.  The teststr command needs the name of the parameter, not
  its values.  The second is a string.  The optional third
  argument is the parameter tree. The default is current.  An optional fourth
  or fifth argument is the keyword 'nocase', 'starts', or 'startsnocase'.  These select
  a case-insensitive match, a match that starts with the string, and a
  case-insensitive match that starts with the string, respectively. The keywords
  themselves are case-insensitve. The keyword 'last' selects the last element that matches
  the string. If the name of a local variable, that is, one that starts with a $, then
  the indices of all elements that match the string are arrayed in that variable.
  The $ variable must exist and it must be of real type.
  The 'last' keyword or the $ variable can be used with the 'nocase', 'starts', and
  'startsnocase'.  The parameter tree argument must be supplied
  in order to use one of these keywords.

  Macro parameters can be used as the first argument.  In this case, the
  third argument must be 'local'.

  This command sets $ret to the index of the array element that matches
  the second argument.  If none of the array values of the parameter match
  the second argument, a zero is returned. If the local $ variable is used
  to get the indices of all the matches, then the return value from teststr
  is the total number of matches.

  If the 'last' argument is given, 

  For example,

  n1='hello','labas','gidday','hola','bonjour','ciao'

  teststr('n1','labas'):r1

  will set r1=2, since 'labas' matches element 2 of the n1 array.

  The elements do not need to be single words.  For example,

  n1='good night','labanaktis','bonne nuit','gute Nacht','boa noite','buonas noches'

  teststr('n1','boa noite'):r1

  will set r1=5.  The strings must match exactly, including upper and lower case.
 
  teststr('n1','gute nacht'):r1

  will set r1=0, since the lower case n in nacht does not match the upper case N in Nacht.
  However, if the case-insensitive match is selected,

  teststr('n1','gute nacht','current','nocase'):r1

  will set r1=4.

  The 'starts' match 

  teststr('n1','laba','current','starts'):r1

  will set r1=2, matching the 'labanaktis' entry.

  Finally, the 'startsNocase' match 

  teststr('n1','gute n','current','startsnocase'):r1

  will set r1=4, matching the 'gute Nacht' entry.

  For local dollar variables,  the 'local' argument must be used.  Again, enclose the
  name of the local parameter in single quotes.

  $greet='hello','labas','gidday','hola','bonjour','ciao'

  teststr('$greet','labas','local'):r1

  $var = 'type0','type1','type1','type3'
  $indices=0

  teststr('$var','type1','local'):$ret
  sets $ret=2
  teststr('$var','type1','local','last'):$ret
  sets $ret=3
  teststr('$var','type1','local','$indices'):$tot
  sets $tot=2 and $indices=2,3
