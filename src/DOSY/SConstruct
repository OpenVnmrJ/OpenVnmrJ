#

from __future__ import print_function
import os
import sys
sys.path.append(os.path.join(os.pardir,os.pardir,'scripts'))
import myShutil # for better copytree()

# we need to specify an absolute path so this SConstruct file
# can be called from any other SConstruct file
cwd = os.getcwd() 

dosyFileList = [
                 'maclib',
                 'manual',
                 'modules',
                 'parlib',
                 'templates' ]


dosyDirName = os.path.join('DOSY')
# alternate path for a DOSY appdir
# dosyDirName = os.path.join('DOSY','dosy')
dosyPath = os.path.join(cwd,os.pardir,os.pardir,os.pardir,'options','standard',dosyDirName)
consoleDosyPath = os.path.join(cwd,os.pardir,os.pardir,os.pardir,'options','console')
if not os.path.exists(dosyPath) :
    os.makedirs(dosyPath)

for i in dosyFileList:
   myShutil.copytree(i,dosyPath,symlinks = False)

protocolPath = os.path.join(consoleDosyPath,'ddr',dosyDirName,'templates','vnmrj')
if not os.path.exists(protocolPath) :
    os.makedirs(protocolPath)
myShutil.copytree('protocols',protocolPath,symlinks = False)

protocolPath = os.path.join(consoleDosyPath,'inova',dosyDirName,'templates','vnmrj')
if not os.path.exists(protocolPath) :
    os.makedirs(protocolPath)
cmd = 'mv protocols protocols_yy'
print("cmd: ",cmd)
os.system(cmd);
myShutil.copytree('protocols_yy',protocolPath,symlinks = False)
cmd = 'mv protocols_yy protocols_yn'
print("cmd: ",cmd)
os.system(cmd);
myShutil.copytree('protocols_yn',protocolPath,symlinks = False)
cmd = 'mv protocols_yn protocols_ny'
print("cmd: ",cmd)
os.system(cmd);
myShutil.copytree('protocols_ny',protocolPath,symlinks = False)
cmd = 'mv protocols_ny protocols_nn'
print("cmd: ",cmd)
os.system(cmd);
myShutil.copytree('protocols_nn',protocolPath,symlinks = False)
cmd = 'mv protocols_nn protocols'
print("cmd: ",cmd)
os.system(cmd);

protocolPath = os.path.join(consoleDosyPath,'mercury',dosyDirName,'templates','vnmrj')
if not os.path.exists(protocolPath) :
    os.makedirs(protocolPath)
myShutil.copytree('protocols',protocolPath,symlinks = False)
cmd = 'cd '+protocolPath+'/protocols;rm -f Ddeptse.xml Dproject_cc.xml DbppADled.xml'
print("cmd: ",cmd)
os.system(cmd);
#lnPath=os.path.join(protocolPath,'protocols')
#if not os.path.islink( lnPath ):
#    cmd='cd '+protocolPath+';ln -s protocols_nn protocols'
#    print("cmd: ",cmd)
#    os.system(cmd)

SConscript('SConstruct.dosy')
