/*
 * Copyright (C) 2015  University of Oregon
 *
 * You may distribute under the terms of either the GNU General Public
 * License or the Apache License, as specified in the LICENSE file.
 *
 * For more information, see the LICENSE file.
 */

package vnmr.templates;

import java.awt.*;
import java.awt.event.*;
import java.util.*;
import java.io.*;
import vnmr.ui.*;
import vnmr.ui.shuf.*;
import vnmr.util.*;

/**
 * <pre>A static builder class for Shuffler Statement construction.
 *  This class contains a single static method {@link vnmr.templates.ShufflerStatementBuilder#build(ArrayList,String) build} that
 *  is used to build an ArrayList of {@link vnmr.ui.shuf.StatementDefinition StatementDefinition} objects
 *  by parsing an XML file.
 * </pre>
 * @author		Dean Sindorf
 */
public class ShufflerStatementBuilder extends Template
{
	//----------------------------------------------------------------
	/** entry point for stand-alone test. */
	//----------------------------------------------------------------
	public static void main(String argv[]) {
		ArrayList statements=new ArrayList();
		String fn=FileUtil.SYS_VNMR + "/shuffler/shuffler_statements.xml";
		try{
			ShufflerStatementBuilder.build(statements,fn);
		}
		catch(java.lang.Exception e){
			System.out.println("error building "+fn);
			return;
		}
		System.out.println("ShufflerStatement build successful");
	}

	//----------------------------------------------------------------
	/** Set default class bindings for xml keywords. */
	//----------------------------------------------------------------
	protected void setDefaultKeys(){
		setKey("*Element", vnmr.templates.VStatementElement.class);
		setKey("Statement", vnmr.templates.VStatementDefinition.class);
		setKey("shuffler", vnmr.templates.VElement.class);
/***
		setKey("*Element",	"vnmr.templates.VStatementElement");
		setKey("Statement",	"vnmr.templates.VStatementDefinition");
		setKey("shuffler",  "vnmr.templates.VElement");
***/
	}

	//----------------------------------------------------------------
    /**<pre>Build a StatementDefinition array by parsing an XML file.
     * <b>usage</b>
     *   ....
     *   ArrayList statements=new ArrayList();
     *   String filename="/vnmr/shuffler/shuffler_statements.xml";
     *   ShufflerStatementBuilder.build(statements,filename);
     *   ....
     *
     *   The method will add to ArrayList <i>statements</i>, a list of
     *   {@link vnmr.ui.shuf.StatementDefinition StatementDefinition} objects generated by parsing <i>filename</i>
	 *
	 * For details on the shuffler statement definition XML file, see
	 * {@link vnmr.bo.ShufflerService#readStatementDefinitionFile()
	 * ShufflerService.readStatementDefinitionFile()}
	 *
     *</pre>
     */
	//----------------------------------------------------------------
	static public void build(ArrayList statements, String fn)
		throws Exception
	{
		ShufflerStatementBuilder builder=new ShufflerStatementBuilder();
		try{
			builder.open(fn);
		}
		catch(java.lang.Exception e){
			System.out.println("error parsing "+fn);
			throw new Exception();
		}
		builder.build(statements,builder.rootElement());
	}

	//----------------------------------------------------------------
	/** Recursive call to build. */
	//----------------------------------------------------------------
	private void build(ArrayList statements, VElement elem){
		Enumeration     elems=elem.children();
		VElement		child;

		if(elem instanceof VStatementDefinition){
		    try {
			statements.add(((VStatementDefinition)elem).build());
			return;
		    }
		    catch (Exception e) {}
		}

		while(elems.hasMoreElements()){
			child=(VElement)elems.nextElement();
			build(statements,child);
		}
	}
}
