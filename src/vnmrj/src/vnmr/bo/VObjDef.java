/*
 * Copyright (C) 2015  University of Oregon
 *
 * You may distribute under the terms of either the GNU General Public
 * License or the Apache License, as specified in the LICENSE file.
 *
 * For more information, see the LICENSE file.
 */

package vnmr.bo;

public interface VObjDef
{
    static final int TYPE = 1;
    static final int LABEL = 2;
    static final int FGCOLOR = 3;
    static final int BGCOLOR = 4;
    static final int VARIABLE = 5; // VNMR variables
    static final int CMD = 6;
    static final int CMD2 = 7;
    static final int SHOW = 8;  // show condition
    static final int FONT_NAME = 9;
    static final int FONT_STYLE = 10;
    static final int FONT_SIZE = 11;
    static final int SETVAL = 12; // commmand to set value
    static final int SETCHOICE = 13;
    static final int SETCHVAL = 14; // choice value
    static final int VALUE = 15;
    static final int CHOICE = 16;
    static final int CHVAL = 17;
    static final int DIGITAL = 18; // show digital readout on dial
    static final int MIN = 19;	// Minimum value on dial, slider, etc.
    static final int MAX = 20;	// Maximum value on dial, slider, etc.
    static final int SHOWMIN = 21; // Show min marker on dial
    static final int SHOWMAX = 22; // Show max marker on dial
    static final int INCR1 = 23; // Size of increment to change value
    static final int INCR2 = 24; // Alt size of increment to change value
    static final int STATPAR = 25; // Status parameter to display
    static final int EDITABLE = 26; // for textArea
    static final int VALUES = 27;  // values list
    static final int PANEL_TAB = 28;
    static final int PANEL_NAME = 29;
    static final int PANEL_FILE = 30;
    static final int PANEL_PARAM = 31;
    static final int ACTION_FILE = 32;
    static final int BORDER = 33; // Type of border to draw
    static final int SIDE = 34; // Which side to put label
    static final int JUSTIFY = 35; // Justification mode
    static final int TAB = 36; // Whether to use this as an index tab
    static final int SAVEKIDS = 37; // Whether to save children in XML
    static final int VAR2 = 38; // Alt Vnmr variable list
    static final int SETVAL2 = 39; // Alt command to set value
    static final int NUMDIGIT = 40; // number of digits
    static final int TITLE = 41; // title string
    static final int STATKEY = 42; // status key variable
    static final int STATSET = 43; // status set variable
    static final int STATCOL = 44;  // set status color to background
    static final int ENABLED = 45;  // enable expression for buttons etc.
    static final int POINTY = 46;  // for shim buttons
    static final int ROCKER = 47;  // for shim buttons
    static final int ARROW = 48;  // for shim buttons
    static final int ARROW_COLOR = 49;  // for shim buttons
    static final int ORIENTATION = 50;
    static final int COUNT = 51;
    static final int COLOR1 = 52;
    static final int COLOR2 = 53;
    static final int COLOR3 = 54;
    static final int STATVAL = 55; // Status values that select
    static final int STATSHOW = 56; // Status values that enable
    static final int PANEL_TYPE = 57; // panel type code (acquisition etc)
    static final int KEYSTR = 58; // search key
    static final int KEYVAL = 59; // search key value
    static final int ICON = 60; // icon
    static final int ENABLE = 61; // enable expression
    static final int VISIBLE = 62; // visible expression
    static final int ELASTIC = 63; // Autoscale range of display
    static final int RADIOBUTTON = 64; // Manage as part of button group
    static final int DISPLAY = 65; // display options
    static final int REFERENCE = 66; // reference file
    static final int USEREF = 67; // use reference file
    static final int HOTKEY = 68; // accelerator key
    static final int IMAGEORLABEL = 69;
    static final int SET_VC = 70;
    static final int TOOL_TIP = 71; // toolTip
    static final int JOINPTS = 72;  // for joining the points in scatter plot.
    static final int FILLHISTGM = 73; // for filling the histogram.
    static final int POINTSIZE = 74; // size of the points in scatter plot.
    static final int DISABLE = 75;  // style of disable: grayed out or label.
    static final int LCVARIABLE = 76; // variable for the left histogram cursor.
    static final int RCVARIABLE = 77; // variable for the right histogram cursor.
    static final int LCSETVAL = 78; // set value of the left histogram cursor.
    static final int RCSETVAL = 79; // set value of the right histogram cursor.
    static final int LCCMD = 80; // for the cmd for the left histogram cursor.
    static final int RCCMD = 81; // for the cmd for the right histogram cursor.
    static final int LCCMD2 = 82; // for the cmd2 for the left histogram cursor.
    static final int RCCMD2 = 83; // for the cmd2 for the right histogram cursor.
    static final int LCCMD3 = 84; // for the cmd3 for the left histogram cursor.
    static final int RCCMD3 = 85; // for the cmd3 for the right histogram cursor.
    static final int LCVAL  = 86; // value of variable of left histogram cursor.
    static final int RCVAL  = 87; // value of variable of right histogram cursor.
    static final int LCSHOW = 88; // show condition of left histogram cursor.
    static final int RCSHOW = 89; // show condition of right histogram cursor.
    static final int LCCOLOR = 90; // color of the left cursor of the histogram.
    static final int RCCOLOR = 91; // color of the right cursor of the histogram.
    static final int GRAPHBGCOL = 92; // color of the background of the canvas.
    static final int GRAPHFGCOL = 93; // color of the foreground of the canvas.
    static final int XAXISSHOW = 94;
    static final int YAXISSHOW = 95;
    static final int XLABELSHOW = 96;
    static final int YLABELSHOW = 97;
    static final int LOGXAXIS = 98;
    static final int LOGYAXIS = 99;
    static final int SHOWGRID = 100;
    static final int RANGE = 101;
    static final int GRIDCOLOR = 102;
    static final int TICKCOLOR = 103;
    static final int SUBTYPE = 104;
    static final int TABLED = 105;
    static final int LAYOUT = 106;
    static final int GRAPHFGCOL2 = 107; // Second data color for graphs
    static final int GRAPHFGCOL3 = 108; // Third data color for graphs
    static final int KEYWORD = 109;
    static final int PATH1 = 110;
    static final int PATH2 = 111;
    static final int WRAP = 112;
    static final int EXPANDED = 113;
    static final int DRAG = 114;
    static final int SIZE1 = 115;
    static final int SIZE2 = 116;
    static final int UNITS = 117;
    static final int ROW = 118; // number of rows for the gridlayout
    static final int COLUMN = 119; // number of columns for the gridlayout
    static final int PREFIX = 120;
    static final int COLOR4 = 121;
    static final int COLOR5 = 122;
    static final int COLOR6 = 123;
    static final int COLOR7 = 124;
    static final int COLOR8 = 125;
    static final int COLOR9 = 126;
    static final int COLOR10 = 127;
    static final int COLOR11 = 128;
    static final int COLOR12 = 129;
    static final int COLOR13 = 130;
    static final int COLOR14 = 131;
    static final int COLOR15 = 132;
    static final int DECOR1 = 133;
    static final int DECOR2 = 134;
    static final int DECOR3 = 135;
    static final int SEPERATOR = 136;
    static final int HALIGN = 137; // horizontalAlignment
    static final int VALIGN = 138; // verticalAlignment
    static final int ANNOTATION = 139;
    static final int DOCKAT = 140;
    static final int LOCX = 141; // the ratio of width
    static final int LOCY = 142; // the ratio of height
    static final int PSFONT = 143; // the PostScript font
    static final int PSSIZE = 144; // the PostScript font size
    static final int CHECKENABLED = 145;
    static final int CHECKVALUE = 146;
    static final int CHECKCMD = 147;
    static final int CHECKCMD2 = 148;
    static final int ENTRYVALUE = 149;
    static final int ENTRYCMD = 150;
    static final int ENTRYSIZE = 151;
    static final int UNITSENABLED = 152;
    static final int UNITSLABEL = 153;
    static final int UNITSVALUE = 154;
    static final int UNITSCMD = 155;
    static final int UNITSSIZE = 156;
    static final int COLUMNS = 157; // the number of columns of table 
    static final int ROWS = 158; // the number of rows of table
    static final int GRAPHBGCOL2 = 159; // Alternate background for canvas
    static final int OBJID = 160; // the id of obj
    static final int CHECKMARK = 161;
    static final int CHECKOBJ = 162;
    static final int SHOWOBJ = 163;
    static final int ACTIONCMD = 164; // Command for Java ActionListener
    static final int TRACKVIEWPORT = 165; // Always talk to active viewport
    static final int SETINCREMENTS = 166; // Set shim button increment
    static final int TOOLTIP = 167; // tooltip
    static final int HELPLINK = 168; // help
    static final int GRID_COLUMN = 169; // grid-column
    static final int GRID_ROW = 170; // grid-row
    static final int GRID_XSPAN = 171; // grid-column-span
    static final int GRID_YSPAN = 172; // grid-row-span
    static final int GRID_ROWALIGN = 173; // grid-row-align
    static final int STRETCH = 174; // stretch
    static final int LABELVARIABLE = 175;
    static final int LABELVALUE = 176;
    static final int SQUISH = 177; // squish
    static final int MODALCLOSE = 178; // modalclose
}

