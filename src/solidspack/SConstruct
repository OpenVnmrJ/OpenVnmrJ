#

import os
import sys
import glob
import shutil
import myShutil # for better copytree()
import myShutilsym

# we need to specify an absolute path so this SConstruct file
# can be called from any other SConstruct file
cwd = os.getcwd() 

dirList = [
                   'maclib',
                   'manual',
                   'modules',
                   'parlib',
                   'studylib',
                   'templates']


standardPath = os.path.join(cwd,os.pardir,os.pardir,os.pardir,'console','ddr','solidspack')
if not os.path.exists(standardPath) :
    os.makedirs(standardPath)

#copy the directory
for i in dirList:
       os.system('rm -rf '+os.path.join(standardPath,i))
       myShutil.copytree(i,standardPath,symlinks = False)

Execute('chmod 644 ' + standardPath + '/maclib/*')
Execute('chmod 644 ' + standardPath + '/manual/*')
Execute('chmod 644 ' + standardPath + '/templates/layout/[a-g]*/*')
Execute('chmod 644 ' + standardPath + '/templates/layout/[h-m]*/*')
Execute('chmod 644 ' + standardPath + '/templates/layout/[n-s]*/*')
Execute('chmod 644 ' + standardPath + '/templates/layout/[t-z]*/*')
Execute('chmod 644 ' + standardPath + '/templates/vnmrj/interface/*')
Execute('chmod 644 ' + standardPath + '/templates/vnmrj/protocols/*')


# Inova section

dirList = [
                   'maclib',
                   'manual',
                   'modules',
                   'parlib',
                   'studylib']

# psglib and seqlib are done in the git psglib category
istandardPath = os.path.join(cwd,os.pardir,os.pardir,os.pardir,'console','inova','solidspack')
if not os.path.exists(istandardPath) :
    os.makedirs(istandardPath)

#copy the directory
for i in dirList:
       os.system('rm -rf '+os.path.join(istandardPath,i))
       myShutil.copytree(i,istandardPath,symlinks = False)

iPath = os.path.join(istandardPath,'templates')
if not os.path.exists(iPath) :
    os.makedirs(iPath)
myShutil.copytree(os.path.join('templates','layout'),os.path.join(iPath,'layout'),symlinks = False)

iPath = os.path.join(istandardPath,'templates','vnmrj')
if not os.path.exists(iPath) :
    os.makedirs(iPath)
myShutil.copytree(os.path.join('templates','vnmrj','interface'),os.path.join(iPath,'interface'),symlinks = False)

iPath = os.path.join(istandardPath,'templates','vnmrj','protocols')
if not os.path.exists(iPath) :
    os.makedirs(iPath)
protoPath = os.path.join(cwd,'templates','vnmrj','protocols')

fileList = [
             'C7inad2d.xml',
             'Hetcorlgcp2d.xml',
             'Lgcp.xml',
             'Mqmas3qzf2d.xml',
             'Mqmas5qzf2d.xml',
             'Onepultoss.xml',
             'Onepul.xml',
             'Pisema2d.xml',
             'Redor1onepul.xml',
             'Redor1tancp.xml',
             'Redor2onepul.xml',
             'Redor2tancp.xml',
             'Ssecho1d.xml',
             'Tancpht1.xml',
             'Tancpxecho.xml',
             'Tancpxflip.xml',
             'Tancpxfslg.xml',
             'Tancpxidref.xml',
             'Tancpxt1rho.xml',
             'Tancpxtoss.xml',
             'Tancpx.xml',
             'Twopul.xml',
             'Wisetancp2d.xml',
           ]

for i in fileList:
   Execute(Copy(os.path.join(iPath,i), os.path.join(protoPath,i)))

Execute('chmod 644 ' + istandardPath + '/maclib/*')
Execute('chmod 644 ' + istandardPath + '/manual/*')
Execute('chmod 644 ' + istandardPath + '/templates/layout/[a-g]*/*')
Execute('chmod 644 ' + istandardPath + '/templates/layout/[h-m]*/*')
Execute('chmod 644 ' + istandardPath + '/templates/layout/[n-s]*/*')
Execute('chmod 644 ' + istandardPath + '/templates/layout/[t-z]*/*')
Execute('chmod 644 ' + istandardPath + '/templates/vnmrj/interface/*')
Execute('chmod 644 ' + istandardPath + '/templates/vnmrj/protocols/*')

