import os
import sys

platform = sys.platform        # sys.platform -> 'linux2' linux, 'interix6' win7 SUA

# targets
usrwtTarget = 'usrwt.o'

# we need to specify an absolute path so this SConstruct file
# can be called from any other SConstruct file
cwd = os.getcwd()

# source files
usrwtFileList = ['usrwt.c']

# build environments
usrwtEnv = Environment(CCFLAGS = '-O -m32',
                       LINKFLAGS = '-m32')

if ('darwin' in platform):
    usrwtEnv.Replace(CC = 'clang')
    usrwtEnv.Replace(CCFLAGS = '-Os -Wall -Wno-implicit-function-declaration ')
    osxflags = os.getenv('osxflags')
    if osxflags:
       usrwtEnv.Append(CCFLAGS = os.getenv('osxflags'))

# actual builds
usrwt = usrwtEnv.StaticObject(target = usrwtTarget,
                              source = [usrwtFileList],
                              LIBS   = ['m'])



# define with absolute path where built files will be copied
vnmrInstallPath = os.path.join(cwd, os.pardir, os.pardir, os.pardir, 'vnmr', 'bin')

# make sure the path(s) exist
if not os.path.exists(vnmrInstallPath):
   os.makedirs(vnmrInstallPath)

usrwtEnv.AddPostAction(usrwt,
                       Action(Copy(vnmrInstallPath, os.path.join(cwd, usrwtTarget))))

