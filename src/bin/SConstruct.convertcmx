from __future__ import print_function
import os
import sys
sys.path.append(os.path.join(os.getcwd(), os.pardir, os.pardir, 'scripts'))
import buildMethods

platform = sys.platform        # sys.platform -> 'linux2' linux, 'interix6' win7 SUA

# targets
Target = 'convertcmx'

# we need to specify an absolute path so this SConstruct file
# can be called from any other SConstruct file
cwd = os.getcwd()

HdrList = ['allocate.h',
                         'bruker.h',
                         'cmx.h',
                         'convert.h',
                         'fdatadef.h',
                         'm100.h',
                         'protos.h',
                         'smis.h',
                         'stext.h',
                         'vdata.h']
FileList = ['bruker.c',
                          'cmx.c',
                          'convertcmx.c',
                          'm100.c',
                          'nmr1.c',
                          'smis.c',
                          'stext.c',
                          'unity.c']

# build environments
Env = Environment(CCFLAGS    = '-O -Wall',
                      CPPDEFINES = ['LINUX'],
                      CPPPATH    = [cwd])

if ('interix' in platform):    # Interix
   interixgcc= os.path.join(os.sep,'opt','gcc.3.3','bin','gcc')
   Env.Replace( CC=interixgcc )
   Env.Replace(  LINKFLAGS='-O -m32' )
   Env.AppendUnique(  CPPDEFINES=[ '_ALL_SOURCE','__INTERIX','LINUX']  )
   Env.Append(  LIBPATH=[ os.path.join(os.sep, 'usr','lib','x86'), os.path.join(os.sep, 'usr','lib')
 ]  )
   #print("CC is:", diffEnv['CC'])
   #print("C++ is:", diffEnv['CXX'])



# actual builds
convertcmx = Env.Program(target = Target,
                             source = [FileList],
                             LIBS   = ['m'])

# define with absolute path where built files will be copied
vnmrInstallPath = os.path.join(cwd, os.pardir, os.pardir, os.pardir, 'vnmr', 'bin')

# make sure the path(s) exist
if not os.path.exists(vnmrInstallPath):
   os.makedirs(vnmrInstallPath)

Env.AddPostAction(convertcmx,
                      Action(Copy(vnmrInstallPath, os.path.join(cwd, Target))))

