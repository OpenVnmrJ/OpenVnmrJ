"macro dcpXYXscans3d"
//dcpXYXscans3d -  Obtain a 3D Double CP HX-XY-YX-X spectrum with 4scans ni = 32
//                 increments and ni2 = 32 increments. XX correlation is limited 
//                 to DARR.

//              Argument 1 is the action: 'setup', 'process' or 'plot'. The
//              action 'setup' initiates an experiment.  The actions 'process'
//              and 'plot' are called by chempackQ.

//              Argument 2 is the nucleus, 'C13' (only). The second nucleus is
//              assumed to be 'N15'.

//             Argument 3 is the region:
//                       'alpha'(13C alpha),DCP code $reg2 = 'NCa', $reg = 'HCa'
//                       'carbonyl(13C carbonyl), DCP code $reg2 = 'NCO', $reg='HCO' 
//                        At present: the 15N region if fixed as 'amide, $reg1 = 'HNai'

//                  Also: For calibration with the 13C offset at 100 ppm set:
//                       'salpha'(13C alpha),DCP code $reg2 = 'sNCa', $reg = 'sHCa'
//                       'scarbonyl(13C carbonyl), DCP code $reg2 = 'sNCO', $reg='sHCO'

//              Argument 4 is the intermediate X region for the YX CP, which may 
//              be different from argument3. It can be alpha' or 'carbonyl'. 

//              Argument 5 must be 'darr'.

//              Argument 6 is the mixing time for 'darr'.

//              Argument 7 is 'softpuly' for band-selctive d2. Soft-pulse parameters
//              are loaded from the probe file. 

//              Argument 8 is 'ctdn' for *no* constant-time decoupling. For the default 
//              tRFmax is set automatically with a minimum of 5 ms. 

//              Argument 9 is 'spinal', 'tppm' or 'waltz' for dec2, Y-channel 
//              decoupling. The appropriate parameters are loaded from the probe file. 

//              Argument 10 is a code for the 2D or 3D display regions: 
//                        'CANcoCX3d' (~50 ppm CA F1, N F2, ~200 ppm CX acquisition)
//                        'CONcaCX3d' (~30 ppm CO F1 N F2 ~200 ppm CX acquisition)
//                        'caNcoCX2d' (N F1, CA transfer, ~200 ppm CX acquisition)
//                        'coNcaCX2d' (N F1, CO transfer, ~200 ppm CX acquisition)
//                        'CAncoCX2d' (N transfer, ~50 ppm CA F1, ~200 ppm CX acquisition)
//                        'COncaCX2d' (N transfer, ~30 ppm CO F1, ~200 ppm CX acquisition)


//==================
// The SETUP macro
//==================

if (($#>0) and ($1='setup')) then

// Set the Nuclei and Region

   parammodule('setsampleglobals')
   rtppar('Settancpx')
   AhXYX
   parammodule('updatesampleglobals')
   parammodule('studydir')

// Set the Observe Region for Pulsewidths, Acquisition and Decoupling.

   $reg='' $pwr='' $nuc=''
   $macroname = $0 + '(\'region\',$2,$3,$5,1):$reg,$pwr,$nuc'
   exec($macroname)
   $pwr=''

// Set Intermediate Region, $reg3, for HX and XY CP. 

   $reg3='' $pwr3='' $nuc3=''
   $macroname = $0 + '(\'region\',$2,$4,$5,0):$reg3,$pwr3,$nuc3'
   exec($macroname)
   $pwr3=''

// Set the Decoupler-2 Region-code for Y Pulsewidths, $reg1.

   $macroname = $0 + '(\'region\',\'N15\',\'amide\',\'\',0):$reg1,$pwr1,$nuc1'
   exec($macroname) 
   $pwr1=''

// Set the Double-CP Region-code for YX CP from Observe ($reg), $reg2.

   $reg2=''
   if ($reg='HCa') then
      $reg2='NCa'
   elseif ($reg='sHCa') then
      $reg2='sNCa'
   elseif ($reg='HCO') then
      $reg2='NCO'
   else 
      $reg2='sNCO'
   endif 

// Set the Double-CP Region-code for XY CP from Intermediate ($reg3), $reg4.
 
   $reg4=''
   if ($reg3='HCa') then 
      $reg4='NCa'
   elseif ($reg3='sHCa') then 
      $reg4='sNCa'
   elseif ($reg3='HCO') then 
      $reg4='NCO'
   else 
      $reg4='sNCO'
   endif 

// Get the Spinrate

   exists('SPspinrateon','parameter','global'):$e
   if ($e<0.5) then 
      create('SPspinrateon','string','global')
      SPspinrateon='n'
   endif
   if (SPspinrateon='y') then 
      $macronamespin = $0 + '(\'spinrate\'):$srate'
      exec($macronamespin)
   else 
      probeparamgroup('getlocal',$reg,'H1','','srateHX'):srate
   endif

   if (srate<500) then 
      write('error','Warning: Error: srate<500, Calibrate srateHX>500 in the Probe File')
      abort
   endif

// Calibrate setddrtc for CP

   exists('ddrpm','parameter'):$e
   if ($e < 0.5) then
      create('ddrpm','string')
      ddrpm='r'
   endif   
   rof2=rd-0.6 alfa=ad

// Check the HY Spinrate

   probeparamgroup('getlocal',$reg1,'H1','','srateHX'):$srate
   if (((srate < 0.995*$srate) or (srate > 1.005*$srate)) and (SPspinrateon='y')) then       
      write('error','Warning: Warning: srate=%f Hz and amide srateHX=%f Hz in the Probe File Disagree\n',srate,$srate)
   endif

// Check the YX Spinrate

   probeparamgroup('getlocal',$reg2,'N15','','srateYX'):$srate
   if (((srate < 0.995*$srate) or (srate > 1.005*$srate)) and (SPspinrateon='y')) then       
      write('error','Warning: Warning: $srate=%f Hz and srateYX=%f in Probe File Hz Disagree\n',srate,$srate)
   endif

// Obtain Pulsewidth Parameters from the Observe Region, $reg.

   probeparamgroup('getlocal',$reg,$nuc,'','ofX90','dbX90'):$tof,tpwr
   tof=$tof
   probeparamgroup('get',$reg,$nuc,'90X','a','pw')
   probeparamgroup('getlocal',$reg,'H1','','ofX90','dbX90'):$dof,dpwr
   dof=$dof
   probeparamgroup('get','hp'+$reg,'H1','90H','a','pw')

// Obtain the Decoupler-2 Pulse-Width parameters from $reg1.

   probeparamgroup('getlocal',$reg1,$nuc1,'','ofX90','dbX90'):$dof2,dpwr2
   dof2=$dof2
   probeparamgroup('getlocal',$reg1,$nuc1,'90X','a','pw'):aY90,pwY90

// Obtain the HX CP Parameters from the Intermediate Region - $reg3

   probeparamgroup('get',$reg3,'H1','HX','ch','sh','to','fr',
                                    'aH','b','d','t','of')
   probeparamgroup('get',$reg3,$nuc3,'HX','aX')

// Obtain Proton Decoupling Parameters from the Observe Region, $reg.
 
   probeparamgroup('get',$reg,'H1','tppmH','a','pw','ph')
   probeparamgroup('get',$reg,'H1','spinalH','a','pw','ph','alp')
   Hseq = 'spinal'

// Obtain YX DCP Parameters from the DCP region, $reg4.

   probeparamgroup('get',$reg2,$nuc1,'YX','ch','sh','to','fr',
                                    'aY','b','d','t','of')
   probeparamgroup('get',$reg2,$nuc,'YX','aX')
   probeparamgroup('get',$reg2,'H1','','aHyx')

// Obtain XY DCP Parameters for the intermediate DCP region, $reg4.

   probeparamgroup('getlocal',$reg4,$nuc1,'YX','ch','sh','to','fr',
                                         'aY','b','d','t','of'):chXY,shXY,toXY,frXY,
                                          aYxy,bXY,dXY,tXY,ofXY
   probeparamgroup('getlocal',$reg4,$nuc3,'YX','aX'):aXxy
   probeparamgroup('getlocal',$reg4,'H1','','aHyx'):aHxy
   frXY='obs'
   toXY='dec2'
   chYX='to'

// Set Parameters for Mixing (default is 'darr', tXmix=200 aHmix=0.0 for Z-filter)

   mMix='darr'
   tXmix=200.0
   aHmix=0.0
   if ($# > 4) then 
      if ($5 = 'darr') then 
         tXmix = 0.0
         if ($# > 5) then 
            tXmix = $6
         endif
         aHmix = aH90*srate*4.0e-6*pwH90
         mMix = 'darr'
      endif
   endif

// Set Region and Indirect Acquisition Parameters from the Display Code

   axis='p2p' dmg1='ph1' pmode='full'
   setref(tn) setref1(dn2) setref2(tn)
   if ($# > 9) then 
      if ($10='coNcaCX2d') then 
         newregion('acq',$reg,'full','f')
         newregion('d2','HNai','nai','r')
         BPpipetype = '(CO)N(CA)CX'
         ni=32 phase=1,2 fn1=256
         ni2=1 phase2=1
         dimension='N15 C13'
      elseif ($10='caNcoCX2d') then 
         newregion('acq',$reg,'full','f')
         newregion('d2','HNai','nai','r')
         BPpipetype = '(CA)N(CO)CX'
         ni=32 phase=1,2 fn1=256
         ni2=1 phase2=1
         dimension='C13 N15'
      elseif ($10='COncaCX2d') then 
         newregion('acq',$reg,'full','f')
         newregion('d3',$reg,'co','r')
         BPpipetype = 'CO(N)(CA)CX'
         ni=1 phase=1 dmg1='ph1'
         ni2=32 phase2=1,2 fn2=256
         dimension='C13 C13'
      elseif ($10='CAncoCX2d') then 
         newregion('acq',$reg,'full','f')
         newregion('d3',$reg,'ca','r')
         BPpipetype = 'CA(N)(CO)CX'
         ni=1 phase=1 fn1=256
         ni2=32 phase2=1,2 fn2=256
         dimension='C13 C13'
      elseif ($10='CONcaCX3d') then 
         newregion('acq',$reg,'full','f')
         newregion('d2','HNai','nai','r')
         newregion('d3',$reg,'co','r')
         BPpipetype = 'CON(CA)CX'
         ni=32 phase=1,2 fn1=256
         ni2=32 phase2=1,2 fn2=256
         dimension='N15 C13 C13'
      elseif ($10='CANcoCX3d') then
         newregion('acq',$reg,'full','f')
         newregion('d2','HNai','nai','r')
         newregion('d3',$reg,'ca','r')
         BPpipetype = 'CAN(CO)CX'
         ni=32 phase=1,2 fn1=256
         ni2=32 phase2=1,2 fn2=256
         dimension='N15 C13 C13'
      else
         newregion('acq',$reg,'full','f')
         newregion('d2',$reg,'full','f')
         newregion('d3','HNai','nai','r')
         BPpipetype = 'C#NC(C#)X'
         ni=32 phase=1,2 fn1=256
         ni2=32 phase2=1,2 fn2=256
         dimension='N15 C13 C13'
      endif
   else
      newregion('acq',$reg,'full','f')
      newregion('d2',$reg,'full','f')
      newregion('d3','HNai','nai','r')
      BPpipetype = 'C#NC(C#)X'
      ni=32 phase=1,2 fn1=256
      ni2=32 phase2=1,2 fn2=256
      dimension='N15 C13 C13'
   endif 

// Set Direct Acquisition Parameters

   ph at=0.015 fn=4.0*np sb=at/2.0 sb='n' sbs=0.0 sbs='n' 
   lb=0.0 lb='n' gain=30 nt=4 d1=0.7 dmg='ph'

// Set Linebroadening 

   lb1=sw1/(3.14159265358979323846*1.0*ni)
   lb2=sw1/(3.14159265358979323846*1.0*ni2)
   lb=2.0*sw/(3.14159265358979323846*np)

// Default No NUS

   sampling='' 
   CSextschname=''
   CSext='n'
   CStype='a'
   CSdensity=100.0
   CSdensity2=100.0

// Linear Prediction

   parlp
   proc='ft'
   parlp(1) proc1='ft' lpopt1='f' lpfilt1=8 lpnupts1=ni strtlp1=ni lpext1=ni strtext1=ni+1
   if (ni>7) then 
      proc1='lp' lpnupts1=ni-3 
   endif

   parlp(2) proc2='ft' lpopt2='f' lpfilt2=8 lpnupts2=ni2 strtlp2=ni2 lpext2=ni2 strtext2=ni2+1
   if (ni2>7) then 
      proc2='lp' lpnupts2=ni2-3
   endif

// Band-selective d2 Evolution 

   softpul='n'
   if ($# > 6) then 
      if ($7='softpuly') then 
         softpul='y'
         probeparamgroup('get',$reg,$nuc,'shp1X','wv','a','db','pw','of')
      endif 
   endif

// Constant-time Decoupling (default is 'y')

   ctd='y'
   tRFmax=5000.0
   if ($#>7) then
      if ($8='ctdn') then
         ctd='n'
         tRFmax=0.0
      endif
   endif

// DEC2 Y-channel Decoupling (default is 'n')

   ddec2='n'
   if ($#>8) then 
      if ($9='spinal') then 
         ddec2='y'
         Yseq='spinal'
         probeparamgroup('get',$reg,$nuc,'spinalY','a','pw','alp','ph')
      elseif ($9='tppm') then
         ddec2='y'
         Yseq='tppm'
         probeparamgroup('get',$reg,$nuc,'tppmY','a','pw','alp','ph')
      elseif ($9='waltz') then
         ddec2='y'
         Yseq='waltz'
         probeparamgroup('get',$reg,$nuc,'waltzY','a','pw','alp','ph')
      endif
   endif

// Access Sample Module

   exists('SPsamplefilename','parameter','global'):$e
   if ($e<0.5) then 
      create('SPsamplefilename','string','global')
      SPsamplefilename=''
   endif

   exists('samplefilename','parameter'):$e
   if ($e<0.5) then 
      create('samplefilename','string')
      samplefilename=''
   endif

   samplefilename=''
   $e=0 $e1=0
   if (SPsamplefilename<>'') then 
      $studysamplefilename=archivedir+'/'+sample+'/dirinfo/'+SPsamplefilename
      exists($studysamplefilename,'file'):$e
      if ($e>0.5) then
         shell('touch '+$studysamplefilename):$dum
         fread($studysamplefilename)
         samplefilename=SPsamplefilename
         write('line3','Obtain Sample Module %s from Study',SPsamplefilename)
      else
         $usersamplefilename=userdir+'/modules/'+SPsamplefilename
         exists($usersamplefilename,'file'):$e1
         if ($e1>0.5) then
            shell('touch '+$usersamplefilename):$dum
            fread($usersamplefilename)
            samplefilename=SPsamplefilename
            write('line3','Obtain Sample Module %s from Modules Directory',SPsamplefilename)
         else 
            write('error','ERROR: Sample Module Does Not Exist')
         endif
      endif
   endif 

   if (samplefilename<>'') then 
      if (tn='C13') then
         if (C13d1>0.0) then d1=C13d1 endif
         if (C13nt>0.0) then nt=C13nt endif
         if (C13sw>0.0) then sw=C13sw endif
         if (C13at>0.0) then at=C13at endif
         if (C13np>0.0) then np=C13np endif
         if (C13ss>0.0) then ss=C13ss endif
      endif
      if (refsource1='sfrq') then
         if (C13ni>0.0) then ni=C13ni endif
         if (C13sw1>0.0) then sw1=C13sw1 endif
      endif
      if (refsource2='sfrq') then
         if (C13ni2>0.0) then ni2=C13ni2 endif
         if (C13sw2>0.0) then sw2=C13sw2 endif
      endif

      if (tn='N15') then
         if (N15d1>0.0) then d1=N15d1 endif
         if (N15nt>0.0) then nt=N15nt endif
         if (N15sw>0.0) then sw=N15sw endif
         if (N15at>0.0) then at=N15at endif
         if (N15np>0.0) then np=N15np endif
         if (N15sw>0.0) then sw=N15sw endif
         if (N15ss>0.0) then ss=N15ss endif
      endif
      if (refsource1='dfrq2') then
         if (N15ni>0.0) then ni=N15ni endif
         if (N15sw1>0.0) then sw1=N15sw1 endif
      endif
      if (refsource2='dfrq2') then
         if (N15ni2>0.0) then ni2=N15ni2 endif
         if (N15sw2>0.0) then sw2=N15sw2 endif
      endif

      if (XXCSextschname<>'') then CSextschname=XXCSextschname endif
      if (XXCSdensity>0.0) then $CSdensity=XXCSdensity endif
      if (XXCSdensity2>0.0) then $CSdensity2=XXCSdensity2 endif
      if (XXsampling<>'') then sampling=XXsampling endif 
   endif

// Save Sample Module with Study

   $e=0
   if (SPsamplefilename<>'') then
      $studysamplefiledir=archivedir+'/'+sample+'/dirinfo'
      exists($studysamplefiledir,'directory'):$e
      if ($e>0.5) then
         module('list',SPsamplefilename):$list
         writeparam(archivedir+'/'+sample+'/dirinfo/'+SPsamplefilename,$list,'current')
         write('line3','Write Sample Module %s to Study',SPsamplefilename)
      else
         write('line3','Sample Module not Written')
      endif
   endif

// Implement NUS

   if (sampling='sparse') then
      CSdensity=$CSdensity
      if (CSdensity=100.0) then CSdensity=50.0 endif
      CSdensity2=$CSdensity2
      if (CSdensity2=100.0) then CSdensity2=50.0 endif
      if (CSextschname<>'') then
         CSext='y'
         CStype='i'
         CSextsch('get') 
      else
         sampling=''
         CSext='n'
         CStype='a'
      endif
   else 
      CSdensity=100.0
      CSdensity2=100.0
   endif
      
// Set the Auto Display to Null

   wnt = ''

// Set Macro-Specific Processing and Plotting 

   wexp = 'chempackQ'
   execprocess = $0 + '(\'process\',\''+$2+'\',\''+$3+'\',\''+$4+'\',\''+$5+'\',0)'
   execplot = ''
   clear(2)
//   au
   return
endif

//===========================
// Macro-Specific Processing
//===========================

if (($# > 0) and ($1 = 'process')) then 

// Analyze the 1H Nutation Curve

   $macroname = $0 + '(\'scans2dyx\',$2,$3,$5,0)'
   exec($macroname)  
endif

//===========================
// Macro-Specific Plotting
//===========================

if (($# > 0) and ($1 = 'plot')) then 
   wc = 50 sc = 50
   plot1d
   return  
endif 

//==================================
// Begin AutoCalibration Utilities
//==================================

//--------------------
// The maxamp function
//--------------------

if (($# > 0) and ($1 = 'maxamp')) then
   select(celem) 
   if (celem=1) then 
      vsadj($2) 
   endif
   peak:$ht
   if ($ht>$2) then 
      vsadj($2) 
   endif 
   return    
endif  

//--------------------------
// The  minmaxfit function
//--------------------------

if (($# > 0) and ($1 = 'minmaxfit')) then 

   $bestone=$2
   $lim=2
   if ($#>3) then $lim=$4 endif

// Prepare 'analyze.inp'

   $file=curexp+'/analyze.inp'
   exists($file,'file'):$a
   if ($a>0.5) then 
      write('reset',$file) 
   endif

   format((2*$lim+1),2,0):$sizes

   write('file',$file,'AMPLITUDE')
   write('file',$file,'INTENSITY')
   write('file',$file,'%12s%13s%7s%7s\n','1',$sizes,'linear','linear')
   format((2*$lim+1),2,0):$sizes
   write('file',$file,'%8s%5s','NEXT',$sizes)
   write('file',$file,'1')

   $step=$bestone-$lim
   repeat
      select($step)
      peak:$ht
      write('file',$file,'%14.1f%12.2f',$step,$ht)
      $step=$step+1
   until ($step>$bestone+$lim)

// 'poly2 Analysis with 'expfit'

   analyze('expfit','regression','poly2')
   $file=curexp+'/analyze.out'
   lookup('file',$file)
   lookup('seek','NEXT','skip', '2','read','4'):$a0s,$a1s,$a2s
   format($a0s,8,4):$a0
   format($a1s,8,4):$a1
   format($a2s,8,4):$a2
   $inf=-$a1/(2.0*$a2)
   $infval=$a0+$a1*$inf+$a2*$inf*$inf

// Mean Value from 'poly0' 

   analyze('expfit','regression','poly0')
   lookup('file',$file)
   lookup('seek','NEXT','skip', '2','read','4'):$a0s,$a1s,$a2s
   format($a0s,8,4):$a0
   $mean=$a0
//   write('line3','$inf=%f $infval=%f $mean=%f',$inf,$infval,$mean)
//   write('line3','$2 = %f',$2)

// Min ($minmax<0) or Max ($minmax>0) or none ($minmax=0)

   $minmax=0 $ret=0.0
   if (($bestone-$lim)<$inf)and($inf<($bestone+$lim)) then 
      $ret=$inf
      if ($infval<$mean) then 
         $minmax=-1
      else
         $minmax=1
      endif
   endif

//   write('line3','$xmin = %f $ret = %f $xmax = %f $minmax=%f',$bestone-$lim,$ret,$bestone+$lim,$minmax)

// Return the new $bestone and a Fraction After $bestone,
// else Return $bestone=$2 and $remainder=0.0 

   $remainder=0 
   if (($3='min')and($minmax<0)) then 
      $bestone=trunc($ret) 
      $remainder=$ret-$bestone
   endif
   if (($3='max')and($minmax>0)) then 
      $bestone=trunc($ret) 
      $remainder=$ret-$bestone
   endif
   if ($minmax=0) then
      $bestone=$2 
      $remainder=0.0
   endif
//   write('line3','$bestone=%f',$bestone)
   return($bestone,$remainder)
endif 

//---------------------
// The Scans2d YX Macro
//---------------------

if (($# > 0) and ($1 = 'scans2dyx')) then

// Set the Region

   $reg='' $pwr='' $nuc=''
   $macroname = $0 + '(\'region\',$2,$3,$4,0):$reg,$pwr,$nuc'
   exec($macroname)
   $pwr=''

// Phase the Data

   $fn=fn    
   fn=16.0*np sb='n' ph wft(1) vsadj(100) noislm(1.0)
   ds(1)
   aph0:$aphok
   if ($aphok=1) then
      aph0
      peak:$int
      if ($int<-10) then rp=rp+180 endif
   endif

// 2D Transform 

   fn=$fn
   $execprocess=execprocess

   if ((BPpipetype='CA(N)(CA)CX') or (BPpipetype='CO(N)(CA)CX')) then      
      $execprocess=execprocess
      if (ni2>1) then
         if (sampling='sparse') then
            wstart='NUSwstart'
            setvalue('wstart',wstart,'processed')
            $3coef='' substr(f1coef,3):$3coef
            if $3coef='' or $3coef='0' then CS_se='n' else CS_se='y' endif
            strstr(file,'enterQ.macdir'):$current
            if not $current or auto='y' then
               isInflated:$i
               if ($i<0.5) then 
                  exists('saveopt','parameter'):$eopt
                  if ($eopt>0.5) then destroy('saveopt'):$dum endif 
                  exists('saveopt','parameter','processed'):$peopt
                  if ($peopt>0.5) then destroy('saveopt','processed'):$dum endif 
    	          cpsave
                  $procmethod='NUSproc'+CSreconmethod
                  exists($procmethod,'maclib'):$ex
                  if ($ex>0.5) then
	             exec($procmethod)
                  else
                     NUSproc nm2d
                  endif
               else
                  wft2da(ni2) nm2d
                  write('line3','Inflated NUS Data is not Saved')
               endif
               exists('saveopt','parameter'):$eopt
               if ($eopt<0.5) then create('saveopt','flag'):$dum endif 
               exists('saveopt','parameter','processed'):$peopt
               if ($peopt<0.5) then create('saveopt','flag','processed'):$dum endif 
               saveopt='n' setvalue('saveopt','n','processed')
            endif
         $procmethod='NUSproc'+CSreconmethod
         exists($procmethod,'maclib'):$ex
         else 
            wft2da(ni2) nm2d
         endif 
      else
         wft
      endif
      setref setref1 setref2

   elseif ((BPpipetype='(CA)N(CO)CX') or (BPpipetype='(CO)N(CA)CX')) then 
      if (ni>1) then 
         if (sampling='sparse') then 
            wstart='NUSwstart'
            setvalue('wstart',wstart,'processed')
            $3coef='' substr(f1coef,3):$3coef
            if $3coef='' or $3coef='0' then CS_se='n' else CS_se='y' endif
            strstr(file,'enterQ.macdir'):$current
            if not $current or auto='y' then
               isInflated:$i
               if ($i<0.5) then 
                  exists('saveopt','parameter'):$eopt
                  if ($eopt>0.5) then destroy('saveopt'):$dum endif 
                  exists('saveopt','parameter','processed'):$peopt
                  if ($peopt>0.5) then destroy('saveopt','processed'):$dum endif 
    	          cpsave
                  $procmethod='NUSproc'+CSreconmethod
                  exists($procmethod,'maclib'):$ex
                  if ($ex>0.5) then
	             exec($procmethod)
                  else
                     NUSproc nm2d
                  endif
               else
                  wft2da nm2d
                  write('line3','Inflated NUS Data is not Saved')
               endif
               exists('saveopt','parameter'):$eopt
               if ($eopt<0.5) then create('saveopt','flag'):$dum endif 
               exists('saveopt','parameter','processed'):$peopt
               if ($peopt<0.5) then create('saveopt','flag','processed'):$dum endif 
               saveopt='n' setvalue('saveopt','n','processed')
            endif
            $procmethod='NUSproc'+CSreconmethod
            exists($procmethod,'maclib'):$ex
         else 
            wft2da nm2d
         endif 
      else
         wft
      endif
      setref setref1 setref2
   else
      write('line3','No Automatic Transform of 3D')     
   endif 
   execprocess=$execprocess
endif

//-------------------
// The Region Macro
//-------------------

if (($# > 0) and ($1 = 'region')) then
   $nuc=$2
   $reg=''
   $pwr=$4
   if (($# > 4) and ($5 = 1)) then 
      if ($2='C13') then 
         tn='C13' dn='H1' dn2='N15' dn3=''   
         wc = 200 sc =10
         ad=4.0 rd=4.0 ddrtc=8.0 rp=0 lp=0 d1=2.0 nt=1 ss=2 bs=4
         sw=100000.0 at=0.01 fn=16.0*np sb=at/2.0 sb='y' sbs='n' lb=50 gain=30
         ofHX=0.0
         if ($3='alpha') then
            d1=2.0 nt=1
            setref(tn) setoffset('C13',63):$tof tof=0.1*trunc($tof/0.1 + 0.5) sp=38p wp=50p
            $reg='HCa'
         elseif ($3='salpha') then
            d1=2.0 nt=1
            setref(tn) setoffset('C13',175):$tof tof=0.1*trunc($tof/0.1 + 0.5) sp=38p wp=50p
            $reg='sHCa'
         elseif ($3='carbonyl') then 
            d1=2.0 nt=1
            setref(tn) setoffset('C13',175):$tof tof=0.1*trunc($tof/0.1 + 0.5) sp=165p wp=20p
            $reg='HCO'
         elseif ($3='scarbonyl') then 
            d1=2.0 nt=1
            setref(tn) setoffset('C13',63):$tof tof=0.1*trunc($tof/0.1 + 0.5) sp=165p wp=20p
            $reg='sHCO'
         elseif ($3='adam') then 
            d1=2.0 nt=1.0
            setref(tn) setoffset('C13',33.3):$tof tof=0.1*trunc($tof/0.1 + 0.5) sp=28p wp=20p
            $reg='HC'
         endif
      elseif ($2='N15') then 
         tn='N15' dn='H1' dn2='C13'  dn3=''   
         wc = 200 sc =10
         ad=16.0 rd=4.0 ddrtc=20.0 rp=0 lp=0 ss=2 bs=4
         sw=100000.0 at=0.01 fn=16.0*np sb=at/2.0 sb='y' sbs='n' lb=0  lb='n' gain=30  
         ofHX=0.0
         if ($3='amide') then
            d1=2.0 nt=1
            setref(tn) setoffset('N15',115):$tof tof=0.1*trunc($tof/0.1 + 0.5) sp=90p wp=50p
            $reg='HNai'
         elseif ($3='amine') then
            d1=2.0 nt=1 
            setref(tn) setoffset('N15',35):$tof tof=0.1*trunc($tof/0.1 + 0.5) sp=15p wp=40p
            $reg='HNam'
         elseif ($3='amino') then 
            d1=2.0 nt=1
            setref(tn) setoffset('N15',35):$tof tof=0.1*trunc($tof/0.1 + 0.5) sp=15p wp=40p
            $reg='HN'
         endif         
      endif
      probeparamgroup('setlocal',$reg,$nuc,'','ofX90',tof)
   else
      if ($2='C13') then 
         if ($3='alpha') then
            $reg='HCa'
         elseif ($3='salpha') then
            $reg='sHCa'
         elseif ($3='carbonyl') then 
            $reg='HCO'
         elseif ($3='scarbonyl') then 
            $reg='sHCO'
         elseif ($3='adam') then 
            $reg='HC'
         endif
      elseif ($2='N15') then 
         if ($3='amide') then
            $reg='HNai'
         elseif ($3='amine') then 
            $reg='HNam'
         elseif ($3='amino') then 
            $reg='HN'
         endif
      endif
   endif
   return($reg,$pwr,$nuc)
endif

//---------------------
// The Spin Rate Macro
//---------------------

if (($# > 0) and ($1 = 'spinrate')) then

// Get the Current Spin Rate with an Average of 10

   banner('Measuring Spinning Rate and Stability')
   $count=1 srate=0
   repeat
      $index=''
      if ($count<10) then
         format($count,1,0):$index
      else
         format($count,2,0):$index
      endif
      $dest=curexp+'/stat'+$index
      shell('showstat > ',$dest):$dummy
 
      lookup('file',$dest,'currently', 'at:','read'):$masrate,$ret 
      if $ret then
         format($masrate,5,0):srate[$count]
      endif
//    echo($masrate)
      shell('sleep 1')
      $count=$count+1
   until ($count>10)

   averag(srate[1],srate[2],srate[3],srate[4],srate[5],srate[6],
       srate[7],srate[8],srate[9],srate[10]):$avgsrate,$dev

   $avgsrate = trunc($avgsrate + 0.5)  

//Check the Spin Rate 

   if ($avgsrate<500) then 
      $message='MAS Spin Rate Measurement is Less Than 500 Hz - Aborting with 0.0 '
      banner($message)
      srate = 0.0
//      abort
   else
      srate = $avgsrate
   endif 

// Remove Files Generated by the Spin Rate Measurement

   $count=1
   repeat
      $index=''
      if ($count<10) then
         format($count,1,0):$index
      else
         format($count,2,0):$index
      endif
      $dest=curexp+'/stat'+$index
      rm($dest):$dummy
      $count=$count+1
   until ($count>10)
   return(srate)
endif 
